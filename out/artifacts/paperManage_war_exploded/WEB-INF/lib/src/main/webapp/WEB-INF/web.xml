<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">




    <!--    web容器加载spring配置文件-->
    <!-- 加载 spring文件-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:config/spring.xml</param-value>
    </context-param>


    <!--主要负责处理由　JavaBeans Introspector的使用而引起的缓冲泄露  -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>

    <!--    listenner会获取到context的key信息，从而得到value，开始初始化IOC容器-->
    <!-- Web应用程序启动时读取contextConfigLocation指定的xml文件，初始化IOC容器 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>


    <!--    过滤每一次的请求-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!-- Shiro Filter is defined in the spring application context: -->
    <!--配置shiro过滤器-->
<!--    <filter>-->
<!--        <filter-name>shiroFilter</filter-name>-->
<!--        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
<!--        <init-param>-->
<!--            <param-name>targetFilterLifecycle</param-name>-->
<!--            <param-value>true</param-value>-->
<!--        </init-param>-->
<!--    </filter>-->

<!--    <filter-mapping>-->
<!--        <filter-name>shiroFilter</filter-name>-->
<!--        <url-pattern>/*</url-pattern>-->
<!--    </filter-mapping>-->



    <!--前端控制器-->
    <servlet>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 加载 spring-mvc文件-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <!--如果spring-mvc.xml已经被整合到spring.xml文件中去了，那么此处value就不用配置了，容器自己去加载-->
            <param-value>classpath:config/spring-mvc.xml</param-value>
        </init-param>

        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>SpringMVC</servlet-name>
        <url-pattern>*.ajax</url-pattern>
        <!--不能写/*-->
    </servlet-mapping>



    <welcome-file-list>
        <welcome-file>login.jsp</welcome-file>
    </welcome-file-list>
    <session-config>
        <session-timeout>15</session-timeout>
    </session-config>
</web-app>

